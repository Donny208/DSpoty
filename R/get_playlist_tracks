#' @title Get Playlist Tracks
#' @name get_playlist_tracks
#' @description This function returns all the tracks of a playlist.
#' @author Donovan Wright
#' @param playlist_id String of artist name.
#' @param offset Integer indicating the offset of the first artist to return. Defaults to 0 (Spotify's API default value).
#' @param access_token Spotify Web API token. Defaults to DSpoty::get_spotify_access_token().
#' @return
#' Returns a data frame with all the tracks of the selected playlist.
#' @export

get_playlist_tracks<-function(playlist_id, offset = 0, access_token = DSpoty::get_spotify_access_token()){

  uris<-tracks_id_df[,ids_label] %>% split(., ceiling(seq_along(.)/50)) %>% .$`1` %>% apply(., paste, MARGIN=2, collapse = ',')

  res<-lmap(seq_len(length(uris)), function(x){

    res1<-RETRY('GET',
                url = str_glue('https://api.spotify.com/v1/tracks/'),
                query = list(ids=uris[[x]], access_token= access_token),
                quiet = TRUE) %>%
      content %>%
      .$tracks
  })

  tracks<-map_df(seq_len(length(res)), function(this_row){

    track<-res[[this_row]]

    list(
      track_name = track$name,
      track_uri = track$id,
      track_url = track$external_url$spotify,
      artist_uri = track$artists[[1]]$id,
      artist_name = track$artists[[1]]$name,
      track_mp3_30s = if_else(is.null(track$preview_url), "NULL", track$preview_url)

    )
  })

  return(tracks)

}
